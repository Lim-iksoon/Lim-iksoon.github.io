{"version":3,"file":"component---src-pages-404-js-6299b6c7b959a0977364.js","mappings":"6LAqEA,IA3De,SAAC,GAAmC,IAG7CA,EAHYC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE3BC,EADQ,MACKH,EAASI,SAoB5B,OAbEL,EADEI,EAEA,sBAAIE,UAAU,gBACZ,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAKN,IAKhB,gBAAC,EAAAK,KAAD,CAAMD,UAAU,mBAAmBE,GAAG,KACnCN,GAML,gBAAC,aAAD,MACG,SAAAO,GAAK,OACJ,uBAAKH,UAAU,iBAAiB,oBAAmBF,GACjD,uBAAKE,UAAWG,EAAMC,KAAO,OAAS,SACpC,gBAAC,IAAD,MACE,uBACEC,MAAO,CACLC,OAAO,SACPC,SAAU,IACVC,QAAQ,wBACRC,WAAY,IAGlB,0BAAQT,UAAU,iBAAiBN,GACnC,gBAAC,IAAD,CAAQgB,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,yBAAvC,SACA,gBAAC,IAAD,CAAQF,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,kCAAvC,SACA,gBAAC,IAAD,CAAQF,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,gCAAvC,SACA,gBAAC,IAAD,CAAQF,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,gCAAvC,SACA,4BAAOf,W,4DCjCnB,UAZqB,SAAC,GAAwB,IAAtBgB,EAAqB,EAArBA,KAAMlB,EAAe,EAAfA,SACtBmB,EAAYD,EAAKE,KAAKC,aAAapB,MAEzC,OACE,gBAAC,IAAD,CAAQD,SAAUA,EAAUC,MAAOkB,GACjC,gBAAC,IAAD,CAAKlB,MAAM,mBACX,4CACA","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link, navigate } from \"gatsby\"\r\nimport PropTypes from 'prop-types'\r\nimport ThemeContext from '../context/ThemeContext'\r\nimport Header from './header'\r\nimport '../styles/layout.css'\r\nimport Button from './buttons'\r\nimport Bio from \"./bio\"\r\n\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n  // const [theme, themeToggler] = useTheme();\r\n  // const themeMode = theme === 'light' ? lightTheme : darkTheme;\r\n  // const {theme, toggleTheme} = useDarkMode();\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {theme => (\r\n        <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n          <div className={theme.dark ? 'dark' : 'light'}>\r\n            <Header></Header>\r\n              <div\r\n                style={{\r\n                  margin: `0 auto`,\r\n                  maxWidth: 960,\r\n                  padding: `0px 1.0875rem 1.45rem`,\r\n                  paddingTop: 0,\r\n                }}\r\n              >\r\n            <header className=\"global-header\">{header}</header>\r\n            <Button primary onClick={()=>{navigate(\"/categories/general\")}}>투자 일반</Button>\r\n            <Button primary onClick={()=>{navigate(\"/categories/investment_diary\")}}>투자 일지</Button>\r\n            <Button primary onClick={()=>{navigate(\"/categories/stock_analysis\")}}>종목 분석</Button>\r\n            <Button primary onClick={()=>{navigate(\"/categories/quant_analysis\")}}>퀀트 분석</Button>\r\n            <main>{children}</main>\r\n            {/* <footer>\r\n            © {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n            </footer> */}\r\n          </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </ThemeContext.Consumer>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst NotFoundPage = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo title=\"404: Not Found\" />\r\n      <h1>404: Not Found</h1>\r\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default NotFoundPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["header","location","title","children","isRootPath","pathname","className","Link","to","theme","dark","style","margin","maxWidth","padding","paddingTop","primary","onClick","navigate","data","siteTitle","site","siteMetadata"],"sourceRoot":""}