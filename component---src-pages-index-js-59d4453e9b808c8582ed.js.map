{"version":3,"file":"component---src-pages-index-js-59d4453e9b808c8582ed.js","mappings":"6LAqEA,IA3De,SAAC,GAAmC,IAG7CA,EAHYC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE3BC,EADQ,MACKH,EAASI,SAoB5B,OAbEL,EADEI,EAEA,sBAAIE,UAAU,gBACZ,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAKN,IAKhB,gBAAC,EAAAK,KAAD,CAAMD,UAAU,mBAAmBE,GAAG,KACnCN,GAML,gBAAC,aAAD,MACG,SAAAO,GAAK,OACJ,uBAAKH,UAAU,iBAAiB,oBAAmBF,GACjD,uBAAKE,UAAWG,EAAMC,KAAO,OAAS,SACpC,gBAAC,IAAD,MACE,uBACEC,MAAO,CACLC,OAAO,SACPC,SAAU,IACVC,QAAQ,wBACRC,WAAY,IAGlB,0BAAQT,UAAU,iBAAiBN,GACnC,gBAAC,IAAD,CAAQgB,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,yBAAvC,SACA,gBAAC,IAAD,CAAQF,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,kCAAvC,SACA,gBAAC,IAAD,CAAQF,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,gCAAvC,SACA,gBAAC,IAAD,CAAQF,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,gCAAvC,SACA,4BAAOf,W,uECQnB,UArDkB,SAAC,GAAwB,IAAD,EAArBgB,EAAqB,EAArBA,KAAMlB,EAAe,EAAfA,SACnBmB,GAAY,UAAAD,EAAKE,KAAKC,oBAAV,eAAwBpB,QAAxB,QACZqB,EAAQJ,EAAKK,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQzB,SAAUA,EAAUC,MAAOkB,GACjC,gBAAC,IAAD,CAAKlB,MAAM,eAMf,gBAAC,IAAD,CAAQD,SAAUA,EAAUC,MAAOkB,GACjC,gBAAC,IAAD,CAAKlB,MAAM,cACX,sBAAIS,MAAO,CAAEgB,UAAU,SACpBJ,EAAMK,KAAI,SAAAC,GACT,IAAM3B,EAAQ2B,EAAKC,YAAY5B,OAAS2B,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACE1B,UAAU,iBACV4B,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAA5B,KAAD,CAAMC,GAAIqB,EAAKE,OAAOC,KAAMI,SAAS,OACnC,wBAAMA,SAAS,YAAYlC,KAG/B,6BAAQ2B,EAAKC,YAAYO,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQV,EAAKC,YAAYU,aAAeX,EAAKY,SAE/CL,SAAS,uBAQvB,0BAAQM,OAAK,EAACC,IAAI,gGAClBC,YAAY","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link, navigate } from \"gatsby\"\r\nimport PropTypes from 'prop-types'\r\nimport ThemeContext from '../context/ThemeContext'\r\nimport Header from './header'\r\nimport '../styles/layout.css'\r\nimport Button from './buttons'\r\nimport Bio from \"./bio\"\r\n\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n  // const [theme, themeToggler] = useTheme();\r\n  // const themeMode = theme === 'light' ? lightTheme : darkTheme;\r\n  // const {theme, toggleTheme} = useDarkMode();\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {theme => (\r\n        <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n          <div className={theme.dark ? 'dark' : 'light'}>\r\n            <Header></Header>\r\n              <div\r\n                style={{\r\n                  margin: `0 auto`,\r\n                  maxWidth: 960,\r\n                  padding: `0px 1.0875rem 1.45rem`,\r\n                  paddingTop: 0,\r\n                }}\r\n              >\r\n            <header className=\"global-header\">{header}</header>\r\n            <Button primary onClick={()=>{navigate(\"/categories/general\")}}>투자 일반</Button>\r\n            <Button primary onClick={()=>{navigate(\"/categories/investment_diary\")}}>투자 일지</Button>\r\n            <Button primary onClick={()=>{navigate(\"/categories/stock_analysis\")}}>종목 분석</Button>\r\n            <Button primary onClick={()=>{navigate(\"/categories/quant_analysis\")}}>퀀트 분석</Button>\r\n            <main>{children}</main>\r\n            {/* <footer>\r\n            © {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n            </footer> */}\r\n          </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </ThemeContext.Consumer>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMarkdownRemark.nodes\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location} title={siteTitle}>\r\n        <Seo title=\"All posts\" />\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo title=\"All posts\" />\r\n      <ol style={{ listStyle: `none` }}>\r\n        {posts.map(post => {\r\n          const title = post.frontmatter.title || post.fields.slug\r\n\r\n          return (\r\n            <li key={post.fields.slug}>\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <header>\r\n                  <h2>\r\n                    <Link to={post.fields.slug} itemProp=\"url\">\r\n                      <span itemProp=\"headline\">{title}</span>\r\n                    </Link>\r\n                  </h2>\r\n                  <small>{post.frontmatter.date}</small>\r\n                </header>\r\n                <section>\r\n                  <p\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: post.frontmatter.description || post.excerpt,\r\n                    }}\r\n                    itemProp=\"description\"\r\n                  />\r\n                </section>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ol>\r\n      <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-6814400196882627\"\r\n      crossorigin=\"anonymous\"></script>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: {\r\n        \r\n      }\r\n      ) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["header","location","title","children","isRootPath","pathname","className","Link","to","theme","dark","style","margin","maxWidth","padding","paddingTop","primary","onClick","navigate","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","nodes","length","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","async","src","crossorigin"],"sourceRoot":""}