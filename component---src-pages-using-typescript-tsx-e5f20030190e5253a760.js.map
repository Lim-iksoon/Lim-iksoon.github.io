{"version":3,"file":"component---src-pages-using-typescript-tsx-e5f20030190e5253a760.js","mappings":"gLA6CA,UAhCwD,SAAC,GAAD,IACtDA,EADsD,EACtDA,KACAC,EAFsD,EAEtDA,KACAC,EAHsD,EAGtDA,SAHsD,OAKtDC,EAAAA,cAACC,EAAAA,EAAD,CAAQC,MAAM,mBAAmBH,SAAUA,GACzCC,EAAAA,cAACG,EAAAA,EAAD,CAAKD,MAAM,qBACXF,EAAAA,cAAAA,KAAAA,KAAAA,0CACAA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,KAAAA,KAAAA,YAD3C,+DAE8CA,EAAAA,cAAAA,KAAAA,KAAAA,eAF9C,wEAKAA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,KAAAA,KAAAA,cAD3C,oBAEMA,EAAAA,cAAAA,KAAAA,KAAAA,cAFN,gBAEsCA,EAAAA,cAAAA,KAAAA,KAAAA,YAFtC,UAIAA,EAAAA,cAAAA,IAAAA,KAAAA,kCACiCF,EADjC,uBAC2D,IACxDD,EAAKO,KAAKC,UAFb,KAIAL,EAAAA,cAAAA,IAAAA,KAAAA,kCACkC,IAChCA,EAAAA,cAAAA,IAAAA,CAAGM,KAAK,6CAAR,kCAFF,KAOAN,EAAAA,cAACO,EAAAA,KAAD,CAAMC,GAAG,KAAT,8B,mFC4BJ,IA3De,SAAC,GAAmC,IAG7CC,EAHYV,EAAgC,EAAhCA,SAAUG,EAAsB,EAAtBA,MAAOQ,EAAe,EAAfA,SAE3BC,EADQ,MACKZ,EAASa,SAoB5B,OAbEH,EADEE,EAEA,sBAAIE,UAAU,gBACZ,gBAAC,EAAAN,KAAD,CAAMC,GAAG,KAAKN,IAKhB,gBAAC,EAAAK,KAAD,CAAMM,UAAU,mBAAmBL,GAAG,KACnCN,GAML,gBAAC,aAAD,MACG,SAAAY,GAAK,OACJ,uBAAKD,UAAU,iBAAiB,oBAAmBF,GACjD,uBAAKE,UAAWC,EAAMC,KAAO,OAAS,SACpC,gBAAC,IAAD,MACE,uBACEC,MAAO,CACLC,OAAO,SACPC,SAAU,IACVC,QAAQ,wBACRC,WAAY,IAGlB,0BAAQP,UAAU,iBAAiBJ,GACnC,gBAAC,IAAD,CAAQY,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,yBAAvC,SACA,gBAAC,IAAD,CAAQF,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,kCAAvC,SACA,gBAAC,IAAD,CAAQF,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,gCAAvC,SACA,gBAAC,IAAD,CAAQF,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,gCAAvC,SACA,4BAAOb","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/layout.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport * as React from \"react\"\r\nimport { PageProps, Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\r\n  data,\r\n  path,\r\n  location,\r\n}) => (\r\n  <Layout title=\"Using TypeScript\" location={location}>\r\n    <Seo title=\"Using TypeScript\" />\r\n    <h1>Gatsby supports TypeScript by default!</h1>\r\n    <p>\r\n      This means that you can create and write <em>.ts/.tsx</em> files for your\r\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\r\n      (like gatsby-node.js) currently don't support TypeScript yet.\r\n    </p>\r\n    <p>\r\n      For type checking you'll want to install <em>typescript</em> via npm and\r\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\r\n    </p>\r\n    <p>\r\n      You're currently on the page \"{path}\" which was built on{\" \"}\r\n      {data.site.buildTime}.\r\n    </p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\r\n        documentation about TypeScript\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport { Link, navigate } from \"gatsby\"\r\nimport PropTypes from 'prop-types'\r\nimport ThemeContext from '../context/ThemeContext'\r\nimport Header from './header'\r\nimport '../styles/layout.css'\r\nimport Button from './buttons'\r\nimport Bio from \"./bio\"\r\n\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n  // const [theme, themeToggler] = useTheme();\r\n  // const themeMode = theme === 'light' ? lightTheme : darkTheme;\r\n  // const {theme, toggleTheme} = useDarkMode();\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {theme => (\r\n        <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n          <div className={theme.dark ? 'dark' : 'light'}>\r\n            <Header></Header>\r\n              <div\r\n                style={{\r\n                  margin: `0 auto`,\r\n                  maxWidth: 960,\r\n                  padding: `0px 1.0875rem 1.45rem`,\r\n                  paddingTop: 0,\r\n                }}\r\n              >\r\n            <header className=\"global-header\">{header}</header>\r\n            <Button primary onClick={()=>{navigate(\"/categories/general\")}}>투자 일반</Button>\r\n            <Button primary onClick={()=>{navigate(\"/categories/investment_diary\")}}>투자 일지</Button>\r\n            <Button primary onClick={()=>{navigate(\"/categories/stock_analysis\")}}>종목 분석</Button>\r\n            <Button primary onClick={()=>{navigate(\"/categories/quant_analysis\")}}>퀀트 분석</Button>\r\n            <main>{children}</main>\r\n            {/* <footer>\r\n            © {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n            </footer> */}\r\n          </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </ThemeContext.Consumer>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"names":["data","path","location","React","Layout","title","Seo","site","buildTime","href","Link","to","header","children","isRootPath","pathname","className","theme","dark","style","margin","maxWidth","padding","paddingTop","primary","onClick","navigate"],"sourceRoot":""}