{"version":3,"file":"component---src-templates-blog-post-js-a8da3ea896dfb4341cc5.js","mappings":"6LAqEA,IA3De,SAAC,GAAmC,IAG7CA,EAHYC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE3BC,EADQ,MACKH,EAASI,SAoB5B,OAbEL,EADEI,EAEA,sBAAIE,UAAU,gBACZ,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAKN,IAKhB,gBAAC,EAAAK,KAAD,CAAMD,UAAU,mBAAmBE,GAAG,KACnCN,GAML,gBAAC,aAAD,MACG,SAAAO,GAAK,OACJ,uBAAKH,UAAU,iBAAiB,oBAAmBF,GACjD,uBAAKE,UAAWG,EAAMC,KAAO,OAAS,SACpC,gBAAC,IAAD,MACE,uBACEC,MAAO,CACLC,OAAO,SACPC,SAAU,IACVC,QAAQ,wBACRC,WAAY,IAGlB,0BAAQT,UAAU,iBAAiBN,GACnC,gBAAC,IAAD,CAAQgB,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,yBAAvC,SACA,gBAAC,IAAD,CAAQF,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,kCAAvC,SACA,gBAAC,IAAD,CAAQF,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,gCAAvC,SACA,gBAAC,IAAD,CAAQF,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,gCAAvC,SACA,4BAAOf,W,iFCenB,UA3DyB,SAAC,GAAwB,IAAD,EAArBgB,EAAqB,EAArBA,KAAMlB,EAAe,EAAfA,SAC1BmB,EAAOD,EAAKE,eACZC,GAAY,UAAAH,EAAKI,KAAKC,oBAAV,eAAwBtB,QAAxB,QACVuB,EAAmBN,EAAnBM,SAAUC,EAASP,EAATO,KAElB,OACE,gBAAC,IAAD,CAAQzB,SAAUA,EAAUC,MAAOoB,GACjC,gBAAC,IAAD,CACEpB,MAAOkB,EAAKO,YAAYzB,MACxB0B,YAAaR,EAAKO,YAAYC,aAAeR,EAAKS,UAEpD,2BACEvB,UAAU,YACVwB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYZ,EAAKO,YAAYzB,OAC1C,yBAAIkB,EAAKO,YAAYM,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQf,EAAKgB,MACxCJ,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAD,QAGJ,uBAAK1B,UAAU,iBACb,sBACEK,MAAO,CACL0B,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACV1B,QAAS,IAGX,0BACGW,GACC,gBAAC,EAAAlB,KAAD,CAAMC,GAAIiB,EAASgB,OAAOC,KAAMC,IAAI,QAApC,KACKlB,EAASE,YAAYzB,QAI9B,0BACGwB,GACC,gBAAC,EAAAnB,KAAD,CAAMC,GAAIkB,EAAKe,OAAOC,KAAMC,IAAI,QAC7BjB,EAAKC,YAAYzB,MADpB","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link, navigate } from \"gatsby\"\r\nimport PropTypes from 'prop-types'\r\nimport ThemeContext from '../context/ThemeContext'\r\nimport Header from './header'\r\nimport '../styles/layout.css'\r\nimport Button from './buttons'\r\nimport Bio from \"./bio\"\r\n\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n  // const [theme, themeToggler] = useTheme();\r\n  // const themeMode = theme === 'light' ? lightTheme : darkTheme;\r\n  // const {theme, toggleTheme} = useDarkMode();\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {theme => (\r\n        <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n          <div className={theme.dark ? 'dark' : 'light'}>\r\n            <Header></Header>\r\n              <div\r\n                style={{\r\n                  margin: `0 auto`,\r\n                  maxWidth: 960,\r\n                  padding: `0px 1.0875rem 1.45rem`,\r\n                  paddingTop: 0,\r\n                }}\r\n              >\r\n            <header className=\"global-header\">{header}</header>\r\n            <Button primary onClick={()=>{navigate(\"/categories/general\")}}>투자 일반</Button>\r\n            <Button primary onClick={()=>{navigate(\"/categories/investment_diary\")}}>투자 일지</Button>\r\n            <Button primary onClick={()=>{navigate(\"/categories/stock_analysis\")}}>종목 분석</Button>\r\n            <Button primary onClick={()=>{navigate(\"/categories/quant_analysis\")}}>퀀트 분석</Button>\r\n            <main>{children}</main>\r\n            {/* <footer>\r\n            © {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n            </footer> */}\r\n          </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </ThemeContext.Consumer>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst BlogPostTemplate = ({ data, location }) => {\r\n  const post = data.markdownRemark\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const { previous, next } = data\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n      />\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n          <p>{post.frontmatter.date}</p>\r\n        </header>\r\n        <section\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n        <hr />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n      <nav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["header","location","title","children","isRootPath","pathname","className","Link","to","theme","dark","style","margin","maxWidth","padding","paddingTop","primary","onClick","navigate","data","post","markdownRemark","siteTitle","site","siteMetadata","previous","next","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","display","flexWrap","justifyContent","listStyle","fields","slug","rel"],"sourceRoot":""}