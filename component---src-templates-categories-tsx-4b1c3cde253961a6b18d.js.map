{"version":3,"file":"component---src-templates-categories-tsx-4b1c3cde253961a6b18d.js","mappings":"kOAqEA,G,QA3De,SAAC,GAAmC,IAG7CA,EAHYC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE3BC,EADQ,MACKH,EAASI,SAoB5B,OAbEL,EADEI,EAEA,sBAAIE,UAAU,gBACZ,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAKN,IAKhB,gBAAC,EAAAK,KAAD,CAAMD,UAAU,mBAAmBE,GAAG,KACnCN,GAML,gBAACO,EAAA,WAAD,MACG,SAAAC,GAAK,OACJ,uBAAKJ,UAAU,iBAAiB,oBAAmBF,GACjD,uBAAKE,UAAWI,EAAMC,KAAO,OAAS,SACpC,gBAAC,IAAD,MACE,uBACEC,MAAO,CACLC,OAAO,SACPC,SAAU,IACVC,QAAQ,wBACRC,WAAY,IAGlB,0BAAQV,UAAU,iBAAiBN,GACnC,gBAAC,IAAD,CAAQiB,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,yBAAvC,SACA,gBAAC,IAAD,CAAQF,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,kCAAvC,SACA,gBAAC,IAAD,CAAQF,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,gCAAvC,SACA,gBAAC,IAAD,CAAQF,SAAO,EAACC,QAAS,YAAKC,EAAAA,EAAAA,UAAS,gCAAvC,SACA,4BAAOhB,W,SCZnB,EAhCsE,SAAC,GAIhE,IAHLiB,EAGI,EAHJA,KACAnB,EAEI,EAFJA,SACAoB,EACI,EADJA,YAEQnB,EAAUkB,EAAKE,KAAKC,aAApBrB,MACAsB,EAAaH,EAAbG,SACR,EAA8BJ,EAAKK,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAAeD,EAAN,SAAuC,IAAfA,EAAmB,GAAK,KAAhD,sBACSH,EADT,IAGf,OACEK,EAAAA,cAACC,EAAD,CAAQ7B,SAAUA,EAAUC,MAAOA,GACjC2B,EAAAA,cAACE,EAAAA,EAAD,CAAK7B,MAAOA,IACZ2B,EAAAA,cAAAA,KAAAA,KAAKD,GACLC,EAAAA,cAAAA,KAAAA,KAEGH,EAAMM,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAhC,EAAU+B,EAAKG,YAAflC,MACR,OACE2B,EAAAA,cAAAA,KAAAA,CAAIQ,IAAKH,GACPL,EAAAA,cAACtB,EAAAA,KAAD,CAAMC,GAAI0B,GAAOhC,QAKzB2B,EAAAA,cAACtB,EAAAA,KAAD,CAAMC,GAAG,KAAT","sources":["webpack://gatsby-starter-blog/./src/components/Layout.js","webpack://gatsby-starter-blog/./src/templates/categories.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link, navigate } from \"gatsby\"\r\nimport PropTypes from 'prop-types'\r\nimport ThemeContext from '../context/ThemeContext'\r\nimport Header from './header'\r\nimport '../styles/layout.css'\r\nimport Button from './buttons'\r\nimport Bio from \"./bio\"\r\n\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n  // const [theme, themeToggler] = useTheme();\r\n  // const themeMode = theme === 'light' ? lightTheme : darkTheme;\r\n  // const {theme, toggleTheme} = useDarkMode();\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Consumer>\r\n      {theme => (\r\n        <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n          <div className={theme.dark ? 'dark' : 'light'}>\r\n            <Header></Header>\r\n              <div\r\n                style={{\r\n                  margin: `0 auto`,\r\n                  maxWidth: 960,\r\n                  padding: `0px 1.0875rem 1.45rem`,\r\n                  paddingTop: 0,\r\n                }}\r\n              >\r\n            <header className=\"global-header\">{header}</header>\r\n            <Button primary onClick={()=>{navigate(\"/categories/general\")}}>투자 일반</Button>\r\n            <Button primary onClick={()=>{navigate(\"/categories/investment_diary\")}}>투자 일지</Button>\r\n            <Button primary onClick={()=>{navigate(\"/categories/stock_analysis\")}}>종목 분석</Button>\r\n            <Button primary onClick={()=>{navigate(\"/categories/quant_analysis\")}}>퀀트 분석</Button>\r\n            <main>{children}</main>\r\n            {/* <footer>\r\n            © {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n            </footer> */}\r\n          </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </ThemeContext.Consumer>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import { graphql, Link, PageProps } from \"gatsby\"\r\nimport React from \"react\"\r\nimport Layout from \"../components/Layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { CategoryQuery, SitePageContext } from \"../../graphql-types\"\r\n\r\n// SitePageContext로부터 context를 이용해 전달한 값들의 type을 얻을 수 있다.\r\nconst Category: React.FC<PageProps<CategoryQuery, SitePageContext>> = ({\r\n  data,\r\n  location,\r\n  pageContext,\r\n}) => {\r\n  const { title } = data.site.siteMetadata\r\n  const { category } = pageContext // gatsby-node.js의 createPage에서 넣어준 카테고리 이름.\r\n  const { edges, totalCount } = data.allMarkdownRemark\r\n  const tagHeader = `${totalCount} post${totalCount === 1 ? \"\" : \"s\"\r\n    } categorized with \"${category}\"`\r\n\r\n  return (\r\n    <Layout location={location} title={title}>\r\n      <SEO title={title} />\r\n      <h1>{tagHeader}</h1>\r\n      <ul>\r\n        {/* 각 카테고리에 해당하는 포스트의 목록을 출력한다. */}\r\n        {edges.map(({ node }) => {\r\n          const { slug } = node.fields\r\n          const { title } = node.frontmatter\r\n          return (\r\n            <li key={slug}>\r\n              <Link to={slug}>{title}</Link>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n      <Link to=\"/\">Go back to the homepage</Link>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Category\r\n\r\n// 쿼리의 argument인 $category는 page context로 전달 받는다.\r\nexport const pageQuery = graphql`\r\n  query Category($category: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { categories: { in: [$category] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"names":["header","location","title","children","isRootPath","pathname","className","Link","to","ThemeContext","theme","dark","style","margin","maxWidth","padding","paddingTop","primary","onClick","navigate","data","pageContext","site","siteMetadata","category","allMarkdownRemark","edges","totalCount","tagHeader","React","Layout","SEO","map","node","slug","fields","frontmatter","key"],"sourceRoot":""}